Version 4.0 HI-TECH Software Intermediate Code
[v F3499 `(v ~T0 @X0 0 tf ]
[v F3500 `(v ~T0 @X0 0 tf ]
[v F3502 `(v ~T0 @X0 0 tf ]
[v F3503 `(v ~T0 @X0 0 tf ]
[v F3505 `(v ~T0 @X0 0 tf ]
[v F3506 `(v ~T0 @X0 0 tf ]
[v F3508 `(v ~T0 @X0 0 tf ]
[v F3509 `(v ~T0 @X0 0 tf ]
"20 MCAL_Layer/usart/hal_usart.c
[; ;MCAL_Layer/usart/hal_usart.c: 20: Std_ReturnType EUSART_Async_Init(const eusart_cfg_t *_eusart)
[c E3449 0 1 2 3 4 6 .. ]
[n E3449 . BAUDRATE_ASYNC_8BIT_LOW_SPEED BAUDRATE_ASYNC_8BIT_HIGH_SPEED BAUDRATE_ASYNC_16BIT_LOW_SPEED BAUDRATE_ASYNC_16BIT_HIGH_SPEED BAUDRATE_SYNC_8BIT BAUDRATE_SYNC_16BIT  ]
"88 MCAL_Layer/usart/hal_usart.h
[; ;MCAL_Layer/usart/hal_usart.h: 88: typedef struct {
[s S277 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S277 . eusart_tx_enable eusart_tx_9bit_enable reserved ]
"82
[; ;MCAL_Layer/usart/hal_usart.h: 82: typedef struct {
[s S276 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S276 . eusart_rx_enable eusart_rx_9bit_enable reserved ]
"74
[; ;MCAL_Layer/usart/hal_usart.h: 74:     struct {
[s S275 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S275 . reserved usart_ferr usart_oerr ]
"73
[; ;MCAL_Layer/usart/hal_usart.h: 73: typedef union {
[u S274 `S275 1 `uc 1 ]
[n S274 . . status ]
"94
[; ;MCAL_Layer/usart/hal_usart.h: 94: typedef struct {
[s S278 `ul 1 `E3449 1 `S277 1 `S276 1 `S274 1 ]
[n S278 . baudrate baudrate_cfg eusart_tx_cfg eusart_rx_cfg error_stat ]
"3032 MCAL_Layer/usart/../interrupt/internal_interrupt/../../../../../MPLAP/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8/pic/include/proc/pic18f4620.h
[s S115 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S115 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"3042
[s S116 :3 `uc 1 :1 `uc 1 ]
[n S116 . . ADEN ]
"3046
[s S117 :5 `uc 1 :1 `uc 1 ]
[n S117 . . SRENA ]
"3050
[s S118 :6 `uc 1 :1 `uc 1 ]
[n S118 . . RC8_9 ]
"3054
[s S119 :6 `uc 1 :1 `uc 1 ]
[n S119 . . RC9 ]
"3058
[s S120 :1 `uc 1 ]
[n S120 . RCD8 ]
"3031
[u S114 `S115 1 `S116 1 `S117 1 `S118 1 `S119 1 `S120 1 ]
[n S114 . . . . . . . ]
"3062
[v _RCSTAbits `VS114 ~T0 @X0 0 e@4011 ]
"1836
[s S73 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S73 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1846
[s S74 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S74 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1835
[u S72 `S73 1 `S74 1 ]
[n S72 . . . ]
"1857
[v _TRISCbits `VS72 ~T0 @X0 0 e@3988 ]
"15 MCAL_Layer/usart/hal_usart.c
[; ;MCAL_Layer/usart/hal_usart.c: 15: static void EUSART_BaudRateInit(const eusart_cfg_t *_eusart);
[v _EUSART_BaudRateInit `(v ~T0 @X0 0 sf1`*CS278 ]
"13
[; ;MCAL_Layer/usart/hal_usart.c: 13: static void EUSART_Tx_init(const eusart_cfg_t *_eusart);
[v _EUSART_Tx_init `(v ~T0 @X0 0 sf1`*CS278 ]
"14
[; ;MCAL_Layer/usart/hal_usart.c: 14: static void EUSART_Rx_init(const eusart_cfg_t *_eusart);
[v _EUSART_Rx_init `(v ~T0 @X0 0 sf1`*CS278 ]
"3242 MCAL_Layer/usart/../interrupt/internal_interrupt/../../../../../MPLAP/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8/pic/include/proc/pic18f4620.h
[s S129 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S129 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"3252
[s S130 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S130 . TX9D1 TRMT1 BRGH1 SENDB1 SYNC1 TXEN1 TX91 CSRC1 ]
"3262
[s S131 :6 `uc 1 :1 `uc 1 ]
[n S131 . . TX8_9 ]
"3266
[s S132 :1 `uc 1 ]
[n S132 . TXD8 ]
"3241
[u S128 `S129 1 `S130 1 `S131 1 `S132 1 ]
[n S128 . . . . . ]
"3270
[v _TXSTAbits `VS128 ~T0 @X0 0 e@4012 ]
"3487
[v _TXREG `Vuc ~T0 @X0 0 e@4013 ]
"2581
[s S97 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S97 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2591
[s S98 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S98 . . TX1IF RC1IF ]
"2580
[u S96 `S97 1 `S98 1 ]
[n S96 . . . ]
"2597
[v _PIR1bits `VS96 ~T0 @X0 0 e@3998 ]
"3499
[v _RCREG `Vuc ~T0 @X0 0 e@4014 ]
"3364
[s S134 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S134 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"3374
[s S135 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S135 . TX9D1 TRMT1 BRGH1 SENDB1 SYNC1 TXEN1 TX91 CSRC1 ]
"3384
[s S136 :6 `uc 1 :1 `uc 1 ]
[n S136 . . TX8_9 ]
"3388
[s S137 :1 `uc 1 ]
[n S137 . TXD8 ]
"3363
[u S133 `S134 1 `S135 1 `S136 1 `S137 1 ]
[n S133 . . . . . ]
"3392
[v _TXSTA1bits `VS133 ~T0 @X0 0 e@4012 ]
"3995
[s S159 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S159 . ABDEN WUE . BRG16 TXCKP RXDTP RCIDL ABDOVF ]
"4005
[s S160 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S160 . . SCKP RXCKP RCMT ]
"4011
[s S161 :1 `uc 1 :1 `uc 1 ]
[n S161 . . W4E ]
"3994
[u S158 `S159 1 `S160 1 `S161 1 ]
[n S158 . . . . ]
"4016
[v _BAUDCONbits `VS158 ~T0 @X0 0 e@4024 ]
"3516
[v _SPBRG1 `Vuc ~T0 @X0 0 e@4015 ]
"3523
[v _SPBRGH `Vuc ~T0 @X0 0 e@4016 ]
[v F3549 `(v ~T0 @X0 0 tf ]
"2504
[s S94 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S94 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2514
[s S95 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S95 . . TX1IE RC1IE ]
"2503
[u S93 `S94 1 `S95 1 ]
[n S93 . . . ]
"2520
[v _PIE1bits `VS93 ~T0 @X0 0 e@3997 ]
[v F3551 `(v ~T0 @X0 0 tf ]
[v F3553 `(v ~T0 @X0 0 tf ]
[v F3554 `(v ~T0 @X0 0 tf ]
"55 MCAL_Layer/usart/../interrupt/internal_interrupt/../../../../../MPLAP/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8/pic/include/proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"6 MCAL_Layer/usart/hal_usart.c
[; ;MCAL_Layer/usart/hal_usart.c: 6: static eusart_pfunc_CBF_t G_EUSART_Tx_CBF = ((void*)0);
[v _G_EUSART_Tx_CBF `*F3499 ~T0 @X0 1 s ]
[i _G_EUSART_Tx_CBF
-> -> -> 0 `i `*v `*F3500
]
"7
[; ;MCAL_Layer/usart/hal_usart.c: 7: static eusart_pfunc_CBF_t G_EUSART_Rx_CBF = ((void*)0);
[v _G_EUSART_Rx_CBF `*F3502 ~T0 @X0 1 s ]
[i _G_EUSART_Rx_CBF
-> -> -> 0 `i `*v `*F3503
]
"8
[; ;MCAL_Layer/usart/hal_usart.c: 8: static eusart_pfunc_CBF_t G_EUSART_FrameError_CBF = ((void*)0);
[v _G_EUSART_FrameError_CBF `*F3505 ~T0 @X0 1 s ]
[i _G_EUSART_FrameError_CBF
-> -> -> 0 `i `*v `*F3506
]
"9
[; ;MCAL_Layer/usart/hal_usart.c: 9: static eusart_pfunc_CBF_t G_EUSART_OverRunError_CBF = ((void*)0);
[v _G_EUSART_OverRunError_CBF `*F3508 ~T0 @X0 1 s ]
[i _G_EUSART_OverRunError_CBF
-> -> -> 0 `i `*v `*F3509
]
"17
[; ;MCAL_Layer/usart/hal_usart.c: 17: static uint8_t* TxData = ((void*)0);
[v _TxData `*uc ~T0 @X0 1 s ]
[i _TxData
-> -> -> 0 `i `*v `*uc
]
"20
[; ;MCAL_Layer/usart/hal_usart.c: 20: Std_ReturnType EUSART_Async_Init(const eusart_cfg_t *_eusart)
[v _EUSART_Async_Init `(uc ~T0 @X0 1 ef1`*CS278 ]
"21
[; ;MCAL_Layer/usart/hal_usart.c: 21: {
{
[e :U _EUSART_Async_Init ]
"20
[; ;MCAL_Layer/usart/hal_usart.c: 20: Std_ReturnType EUSART_Async_Init(const eusart_cfg_t *_eusart)
[v __eusart `*CS278 ~T0 @X0 1 r1 ]
"21
[; ;MCAL_Layer/usart/hal_usart.c: 21: {
[f ]
"22
[; ;MCAL_Layer/usart/hal_usart.c: 22:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"23
[; ;MCAL_Layer/usart/hal_usart.c: 23:     if(_eusart == ((void*)0))
[e $ ! == __eusart -> -> -> 0 `i `*v `*CS278 280  ]
"24
[; ;MCAL_Layer/usart/hal_usart.c: 24:     {
{
"25
[; ;MCAL_Layer/usart/hal_usart.c: 25:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"26
[; ;MCAL_Layer/usart/hal_usart.c: 26:     }
}
[e $U 281  ]
"27
[; ;MCAL_Layer/usart/hal_usart.c: 27:     else
[e :U 280 ]
"28
[; ;MCAL_Layer/usart/hal_usart.c: 28:     {
{
"30
[; ;MCAL_Layer/usart/hal_usart.c: 30:         (RCSTAbits.SPEN = 0);
[e = . . _RCSTAbits 0 7 -> -> 0 `i `uc ]
"32
[; ;MCAL_Layer/usart/hal_usart.c: 32:         TRISCbits.RC6 = 1;
[e = . . _TRISCbits 1 6 -> -> 1 `i `uc ]
"33
[; ;MCAL_Layer/usart/hal_usart.c: 33:         TRISCbits.RC7 = 1;
[e = . . _TRISCbits 1 7 -> -> 1 `i `uc ]
"35
[; ;MCAL_Layer/usart/hal_usart.c: 35:         EUSART_BaudRateInit(_eusart);
[e ( _EUSART_BaudRateInit (1 __eusart ]
"37
[; ;MCAL_Layer/usart/hal_usart.c: 37:         if(_eusart->eusart_tx_cfg.eusart_tx_enable == 1)
[e $ ! == -> . . *U __eusart 2 0 `i -> 1 `i 282  ]
"38
[; ;MCAL_Layer/usart/hal_usart.c: 38:         {
{
"39
[; ;MCAL_Layer/usart/hal_usart.c: 39:             EUSART_Tx_init(_eusart);
[e ( _EUSART_Tx_init (1 __eusart ]
"40
[; ;MCAL_Layer/usart/hal_usart.c: 40:         }
}
[e $U 283  ]
"41
[; ;MCAL_Layer/usart/hal_usart.c: 41:         else { }
[e :U 282 ]
{
}
[e :U 283 ]
"44
[; ;MCAL_Layer/usart/hal_usart.c: 44:         if(_eusart->eusart_rx_cfg.eusart_rx_enable == 1)
[e $ ! == -> . . *U __eusart 3 0 `i -> 1 `i 284  ]
"45
[; ;MCAL_Layer/usart/hal_usart.c: 45:         {
{
"46
[; ;MCAL_Layer/usart/hal_usart.c: 46:             EUSART_Rx_init(_eusart);
[e ( _EUSART_Rx_init (1 __eusart ]
"47
[; ;MCAL_Layer/usart/hal_usart.c: 47:         }
}
[e $U 285  ]
"48
[; ;MCAL_Layer/usart/hal_usart.c: 48:         else { }
[e :U 284 ]
{
}
[e :U 285 ]
"49
[; ;MCAL_Layer/usart/hal_usart.c: 49:         (RCSTAbits.SPEN = 1);
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
"50
[; ;MCAL_Layer/usart/hal_usart.c: 50:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"51
[; ;MCAL_Layer/usart/hal_usart.c: 51:     }
}
[e :U 281 ]
"52
[; ;MCAL_Layer/usart/hal_usart.c: 52:     return ret;
[e ) _ret ]
[e $UE 279  ]
"53
[; ;MCAL_Layer/usart/hal_usart.c: 53: }
[e :UE 279 ]
}
"54
[; ;MCAL_Layer/usart/hal_usart.c: 54: Std_ReturnType EUSART_Deinit(const eusart_cfg_t *_eusart)
[v _EUSART_Deinit `(uc ~T0 @X0 1 ef1`*CS278 ]
"55
[; ;MCAL_Layer/usart/hal_usart.c: 55: {
{
[e :U _EUSART_Deinit ]
"54
[; ;MCAL_Layer/usart/hal_usart.c: 54: Std_ReturnType EUSART_Deinit(const eusart_cfg_t *_eusart)
[v __eusart `*CS278 ~T0 @X0 1 r1 ]
"55
[; ;MCAL_Layer/usart/hal_usart.c: 55: {
[f ]
"56
[; ;MCAL_Layer/usart/hal_usart.c: 56:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"57
[; ;MCAL_Layer/usart/hal_usart.c: 57:     if(_eusart == ((void*)0))
[e $ ! == __eusart -> -> -> 0 `i `*v `*CS278 287  ]
"58
[; ;MCAL_Layer/usart/hal_usart.c: 58:     {
{
"59
[; ;MCAL_Layer/usart/hal_usart.c: 59:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"60
[; ;MCAL_Layer/usart/hal_usart.c: 60:     }
}
[e $U 288  ]
"61
[; ;MCAL_Layer/usart/hal_usart.c: 61:     else
[e :U 287 ]
"62
[; ;MCAL_Layer/usart/hal_usart.c: 62:     {
{
"63
[; ;MCAL_Layer/usart/hal_usart.c: 63:         (RCSTAbits.SPEN = 0);
[e = . . _RCSTAbits 0 7 -> -> 0 `i `uc ]
"64
[; ;MCAL_Layer/usart/hal_usart.c: 64:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"65
[; ;MCAL_Layer/usart/hal_usart.c: 65:     }
}
[e :U 288 ]
"66
[; ;MCAL_Layer/usart/hal_usart.c: 66:     return ret;
[e ) _ret ]
[e $UE 286  ]
"67
[; ;MCAL_Layer/usart/hal_usart.c: 67: }
[e :UE 286 ]
}
"68
[; ;MCAL_Layer/usart/hal_usart.c: 68: Std_ReturnType EUSART_WriteByte_Blocking(uint8_t data)
[v _EUSART_WriteByte_Blocking `(uc ~T0 @X0 1 ef1`uc ]
"69
[; ;MCAL_Layer/usart/hal_usart.c: 69: {
{
[e :U _EUSART_WriteByte_Blocking ]
"68
[; ;MCAL_Layer/usart/hal_usart.c: 68: Std_ReturnType EUSART_WriteByte_Blocking(uint8_t data)
[v _data `uc ~T0 @X0 1 r1 ]
"69
[; ;MCAL_Layer/usart/hal_usart.c: 69: {
[f ]
"70
[; ;MCAL_Layer/usart/hal_usart.c: 70:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"72
[; ;MCAL_Layer/usart/hal_usart.c: 72:         while( !TXSTAbits.TRMT )
[e $U 290  ]
[e :U 291 ]
"73
[; ;MCAL_Layer/usart/hal_usart.c: 73:             ;
[e :U 290 ]
"72
[; ;MCAL_Layer/usart/hal_usart.c: 72:         while( !TXSTAbits.TRMT )
[e $ ! != -> . . _TXSTAbits 0 1 `i -> 0 `i 291  ]
[e :U 292 ]
"77
[; ;MCAL_Layer/usart/hal_usart.c: 77:         TXREG = data;
[e = _TXREG _data ]
"78
[; ;MCAL_Layer/usart/hal_usart.c: 78:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"79
[; ;MCAL_Layer/usart/hal_usart.c: 79:     return ret;
[e ) _ret ]
[e $UE 289  ]
"80
[; ;MCAL_Layer/usart/hal_usart.c: 80: }
[e :UE 289 ]
}
"81
[; ;MCAL_Layer/usart/hal_usart.c: 81: Std_ReturnType EUSART_WriteStr_Blocking(uint8_t* data)
[v _EUSART_WriteStr_Blocking `(uc ~T0 @X0 1 ef1`*uc ]
"82
[; ;MCAL_Layer/usart/hal_usart.c: 82: {
{
[e :U _EUSART_WriteStr_Blocking ]
"81
[; ;MCAL_Layer/usart/hal_usart.c: 81: Std_ReturnType EUSART_WriteStr_Blocking(uint8_t* data)
[v _data `*uc ~T0 @X0 1 r1 ]
"82
[; ;MCAL_Layer/usart/hal_usart.c: 82: {
[f ]
"83
[; ;MCAL_Layer/usart/hal_usart.c: 83:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"84
[; ;MCAL_Layer/usart/hal_usart.c: 84:     if(data == ((void*)0))
[e $ ! == _data -> -> -> 0 `i `*v `*uc 294  ]
"85
[; ;MCAL_Layer/usart/hal_usart.c: 85:     {
{
"86
[; ;MCAL_Layer/usart/hal_usart.c: 86:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"87
[; ;MCAL_Layer/usart/hal_usart.c: 87:     }
}
[e $U 295  ]
"88
[; ;MCAL_Layer/usart/hal_usart.c: 88:     else
[e :U 294 ]
"89
[; ;MCAL_Layer/usart/hal_usart.c: 89:     {
{
"90
[; ;MCAL_Layer/usart/hal_usart.c: 90:         while(*data)
[e $U 296  ]
[e :U 297 ]
"91
[; ;MCAL_Layer/usart/hal_usart.c: 91:         {
{
"92
[; ;MCAL_Layer/usart/hal_usart.c: 92:             EUSART_WriteByte_Blocking(*data++);
[e ( _EUSART_WriteByte_Blocking (1 *U ++ _data * -> -> 1 `i `x -> -> # *U _data `i `x ]
"93
[; ;MCAL_Layer/usart/hal_usart.c: 93:         }
}
[e :U 296 ]
"90
[; ;MCAL_Layer/usart/hal_usart.c: 90:         while(*data)
[e $ != -> *U _data `i -> 0 `i 297  ]
[e :U 298 ]
"94
[; ;MCAL_Layer/usart/hal_usart.c: 94:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"95
[; ;MCAL_Layer/usart/hal_usart.c: 95:     }
}
[e :U 295 ]
"96
[; ;MCAL_Layer/usart/hal_usart.c: 96:     return ret;
[e ) _ret ]
[e $UE 293  ]
"97
[; ;MCAL_Layer/usart/hal_usart.c: 97: }
[e :UE 293 ]
}
"98
[; ;MCAL_Layer/usart/hal_usart.c: 98: Std_ReturnType EUSART_ReadByte_Blocking( uint8_t* _data)
[v _EUSART_ReadByte_Blocking `(uc ~T0 @X0 1 ef1`*uc ]
"99
[; ;MCAL_Layer/usart/hal_usart.c: 99: {
{
[e :U _EUSART_ReadByte_Blocking ]
"98
[; ;MCAL_Layer/usart/hal_usart.c: 98: Std_ReturnType EUSART_ReadByte_Blocking( uint8_t* _data)
[v __data `*uc ~T0 @X0 1 r1 ]
"99
[; ;MCAL_Layer/usart/hal_usart.c: 99: {
[f ]
"100
[; ;MCAL_Layer/usart/hal_usart.c: 100:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"101
[; ;MCAL_Layer/usart/hal_usart.c: 101:     if(_data == ((void*)0))
[e $ ! == __data -> -> -> 0 `i `*v `*uc 300  ]
"102
[; ;MCAL_Layer/usart/hal_usart.c: 102:     {
{
"103
[; ;MCAL_Layer/usart/hal_usart.c: 103:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"104
[; ;MCAL_Layer/usart/hal_usart.c: 104:     }
}
[e $U 301  ]
"105
[; ;MCAL_Layer/usart/hal_usart.c: 105:     else
[e :U 300 ]
"106
[; ;MCAL_Layer/usart/hal_usart.c: 106:     {
{
"107
[; ;MCAL_Layer/usart/hal_usart.c: 107:         while(!PIR1bits.RCIF)
[e $U 302  ]
[e :U 303 ]
"108
[; ;MCAL_Layer/usart/hal_usart.c: 108:             ;
[e :U 302 ]
"107
[; ;MCAL_Layer/usart/hal_usart.c: 107:         while(!PIR1bits.RCIF)
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 303  ]
[e :U 304 ]
"109
[; ;MCAL_Layer/usart/hal_usart.c: 109:         *_data = RCREG;
[e = *U __data _RCREG ]
"113
[; ;MCAL_Layer/usart/hal_usart.c: 113:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"114
[; ;MCAL_Layer/usart/hal_usart.c: 114:     }
}
[e :U 301 ]
"115
[; ;MCAL_Layer/usart/hal_usart.c: 115:     return ret;
[e ) _ret ]
[e $UE 299  ]
"116
[; ;MCAL_Layer/usart/hal_usart.c: 116: }
[e :UE 299 ]
}
"117
[; ;MCAL_Layer/usart/hal_usart.c: 117: Std_ReturnType EUSART_WriteByte_polling(uint8_t data)
[v _EUSART_WriteByte_polling `(uc ~T0 @X0 1 ef1`uc ]
"118
[; ;MCAL_Layer/usart/hal_usart.c: 118: {
{
[e :U _EUSART_WriteByte_polling ]
"117
[; ;MCAL_Layer/usart/hal_usart.c: 117: Std_ReturnType EUSART_WriteByte_polling(uint8_t data)
[v _data `uc ~T0 @X0 1 r1 ]
"118
[; ;MCAL_Layer/usart/hal_usart.c: 118: {
[f ]
"119
[; ;MCAL_Layer/usart/hal_usart.c: 119:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"120
[; ;MCAL_Layer/usart/hal_usart.c: 120:     if(TXSTAbits.TRMT == 1)
[e $ ! == -> . . _TXSTAbits 0 1 `i -> 1 `i 306  ]
"121
[; ;MCAL_Layer/usart/hal_usart.c: 121:     {
{
"122
[; ;MCAL_Layer/usart/hal_usart.c: 122:         TXREG = data;
[e = _TXREG _data ]
"126
[; ;MCAL_Layer/usart/hal_usart.c: 126:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"127
[; ;MCAL_Layer/usart/hal_usart.c: 127:     }
}
[e $U 307  ]
"128
[; ;MCAL_Layer/usart/hal_usart.c: 128:     else
[e :U 306 ]
"129
[; ;MCAL_Layer/usart/hal_usart.c: 129:     {
{
"130
[; ;MCAL_Layer/usart/hal_usart.c: 130:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"131
[; ;MCAL_Layer/usart/hal_usart.c: 131:     }
}
[e :U 307 ]
"133
[; ;MCAL_Layer/usart/hal_usart.c: 133:     return ret;
[e ) _ret ]
[e $UE 305  ]
"134
[; ;MCAL_Layer/usart/hal_usart.c: 134: }
[e :UE 305 ]
}
"136
[; ;MCAL_Layer/usart/hal_usart.c: 136: Std_ReturnType EUSART_WriteStr_polling(uint8_t* data)
[v _EUSART_WriteStr_polling `(uc ~T0 @X0 1 ef1`*uc ]
"137
[; ;MCAL_Layer/usart/hal_usart.c: 137: {
{
[e :U _EUSART_WriteStr_polling ]
"136
[; ;MCAL_Layer/usart/hal_usart.c: 136: Std_ReturnType EUSART_WriteStr_polling(uint8_t* data)
[v _data `*uc ~T0 @X0 1 r1 ]
"137
[; ;MCAL_Layer/usart/hal_usart.c: 137: {
[f ]
"138
[; ;MCAL_Layer/usart/hal_usart.c: 138:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"139
[; ;MCAL_Layer/usart/hal_usart.c: 139:     if(data)
[e $ ! != _data -> -> 0 `i `*uc 309  ]
"140
[; ;MCAL_Layer/usart/hal_usart.c: 140:     {
{
"141
[; ;MCAL_Layer/usart/hal_usart.c: 141:         while(*data)
[e $U 310  ]
[e :U 311 ]
"142
[; ;MCAL_Layer/usart/hal_usart.c: 142:         {
{
"143
[; ;MCAL_Layer/usart/hal_usart.c: 143:             ret = EUSART_WriteByte_polling(*data);
[e = _ret ( _EUSART_WriteByte_polling (1 *U _data ]
"144
[; ;MCAL_Layer/usart/hal_usart.c: 144:             if(ret == ((Std_ReturnType)0x01))
[e $ ! == -> _ret `i -> -> -> 1 `i `uc `i 313  ]
"145
[; ;MCAL_Layer/usart/hal_usart.c: 145:             {
{
"146
[; ;MCAL_Layer/usart/hal_usart.c: 146:                 data++;
[e ++ _data * -> -> 1 `i `x -> -> # *U _data `i `x ]
"148
[; ;MCAL_Layer/usart/hal_usart.c: 148:             }
}
[e $U 314  ]
"149
[; ;MCAL_Layer/usart/hal_usart.c: 149:             else
[e :U 313 ]
"150
[; ;MCAL_Layer/usart/hal_usart.c: 150:             {
{
"152
[; ;MCAL_Layer/usart/hal_usart.c: 152:             }
}
[e :U 314 ]
"154
[; ;MCAL_Layer/usart/hal_usart.c: 154:         }
}
[e :U 310 ]
"141
[; ;MCAL_Layer/usart/hal_usart.c: 141:         while(*data)
[e $ != -> *U _data `i -> 0 `i 311  ]
[e :U 312 ]
"155
[; ;MCAL_Layer/usart/hal_usart.c: 155:     }
}
[e $U 315  ]
"157
[; ;MCAL_Layer/usart/hal_usart.c: 157:     else
[e :U 309 ]
"158
[; ;MCAL_Layer/usart/hal_usart.c: 158:     {
{
"159
[; ;MCAL_Layer/usart/hal_usart.c: 159:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"160
[; ;MCAL_Layer/usart/hal_usart.c: 160:     }
}
[e :U 315 ]
"161
[; ;MCAL_Layer/usart/hal_usart.c: 161:     return ret;
[e ) _ret ]
[e $UE 308  ]
"162
[; ;MCAL_Layer/usart/hal_usart.c: 162: }
[e :UE 308 ]
}
"164
[; ;MCAL_Layer/usart/hal_usart.c: 164: Std_ReturnType EUSART_ReadByte_polling(uint8_t* data)
[v _EUSART_ReadByte_polling `(uc ~T0 @X0 1 ef1`*uc ]
"165
[; ;MCAL_Layer/usart/hal_usart.c: 165: {
{
[e :U _EUSART_ReadByte_polling ]
"164
[; ;MCAL_Layer/usart/hal_usart.c: 164: Std_ReturnType EUSART_ReadByte_polling(uint8_t* data)
[v _data `*uc ~T0 @X0 1 r1 ]
"165
[; ;MCAL_Layer/usart/hal_usart.c: 165: {
[f ]
"166
[; ;MCAL_Layer/usart/hal_usart.c: 166:     Std_ReturnType ret = ((Std_ReturnType)0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"167
[; ;MCAL_Layer/usart/hal_usart.c: 167:     if( !data || !PIR1bits.RCIF )
[e $ ! || ! != _data -> -> 0 `i `*uc ! != -> . . _PIR1bits 0 5 `i -> 0 `i 317  ]
"168
[; ;MCAL_Layer/usart/hal_usart.c: 168:     {
{
"169
[; ;MCAL_Layer/usart/hal_usart.c: 169:         ret = ((Std_ReturnType)0x00);
[e = _ret -> -> 0 `i `uc ]
"170
[; ;MCAL_Layer/usart/hal_usart.c: 170:     }
}
[e $U 318  ]
"171
[; ;MCAL_Layer/usart/hal_usart.c: 171:     else
[e :U 317 ]
"172
[; ;MCAL_Layer/usart/hal_usart.c: 172:     {
{
"173
[; ;MCAL_Layer/usart/hal_usart.c: 173:         *data = RCREG;
[e = *U _data _RCREG ]
"174
[; ;MCAL_Layer/usart/hal_usart.c: 174:         ret = ((Std_ReturnType)0x01);
[e = _ret -> -> 1 `i `uc ]
"175
[; ;MCAL_Layer/usart/hal_usart.c: 175:     }
}
[e :U 318 ]
"176
[; ;MCAL_Layer/usart/hal_usart.c: 176:     return ret;
[e ) _ret ]
[e $UE 316  ]
"177
[; ;MCAL_Layer/usart/hal_usart.c: 177: }
[e :UE 316 ]
}
"179
[; ;MCAL_Layer/usart/hal_usart.c: 179: static void EUSART_Tx_init(const eusart_cfg_t *_eusart)
[v _EUSART_Tx_init `(v ~T0 @X0 1 sf1`*CS278 ]
"180
[; ;MCAL_Layer/usart/hal_usart.c: 180: {
{
[e :U _EUSART_Tx_init ]
"179
[; ;MCAL_Layer/usart/hal_usart.c: 179: static void EUSART_Tx_init(const eusart_cfg_t *_eusart)
[v __eusart `*CS278 ~T0 @X0 1 r1 ]
"180
[; ;MCAL_Layer/usart/hal_usart.c: 180: {
[f ]
"199
[; ;MCAL_Layer/usart/hal_usart.c: 199:     if(_eusart->eusart_tx_cfg.eusart_tx_9bit_enable == 1)
[e $ ! == -> . . *U __eusart 2 1 `i -> 1 `i 320  ]
"200
[; ;MCAL_Layer/usart/hal_usart.c: 200:     {
{
"201
[; ;MCAL_Layer/usart/hal_usart.c: 201:         TXSTAbits.TX9 = 1;
[e = . . _TXSTAbits 0 6 -> -> 1 `i `uc ]
"202
[; ;MCAL_Layer/usart/hal_usart.c: 202:     }
}
[e $U 321  ]
"203
[; ;MCAL_Layer/usart/hal_usart.c: 203:     else {}
[e :U 320 ]
{
}
[e :U 321 ]
"205
[; ;MCAL_Layer/usart/hal_usart.c: 205:     TXSTAbits.TXEN = 1;
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
"206
[; ;MCAL_Layer/usart/hal_usart.c: 206:     return;
[e $UE 319  ]
"207
[; ;MCAL_Layer/usart/hal_usart.c: 207: }
[e :UE 319 ]
}
"208
[; ;MCAL_Layer/usart/hal_usart.c: 208: static void EUSART_Rx_init(const eusart_cfg_t *_eusart)
[v _EUSART_Rx_init `(v ~T0 @X0 1 sf1`*CS278 ]
"209
[; ;MCAL_Layer/usart/hal_usart.c: 209: {
{
[e :U _EUSART_Rx_init ]
"208
[; ;MCAL_Layer/usart/hal_usart.c: 208: static void EUSART_Rx_init(const eusart_cfg_t *_eusart)
[v __eusart `*CS278 ~T0 @X0 1 r1 ]
"209
[; ;MCAL_Layer/usart/hal_usart.c: 209: {
[f ]
"230
[; ;MCAL_Layer/usart/hal_usart.c: 230:     if(_eusart->eusart_rx_cfg.eusart_rx_9bit_enable == 1)
[e $ ! == -> . . *U __eusart 3 1 `i -> 1 `i 323  ]
"231
[; ;MCAL_Layer/usart/hal_usart.c: 231:     {
{
"232
[; ;MCAL_Layer/usart/hal_usart.c: 232:         RCSTAbits.RX9 = 1;
[e = . . _RCSTAbits 0 6 -> -> 1 `i `uc ]
"233
[; ;MCAL_Layer/usart/hal_usart.c: 233:     }
}
[e $U 324  ]
"234
[; ;MCAL_Layer/usart/hal_usart.c: 234:     else {}
[e :U 323 ]
{
}
[e :U 324 ]
"236
[; ;MCAL_Layer/usart/hal_usart.c: 236:     RCSTAbits.CREN = 1;
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"238
[; ;MCAL_Layer/usart/hal_usart.c: 238:     return;
[e $UE 322  ]
"239
[; ;MCAL_Layer/usart/hal_usart.c: 239: }
[e :UE 322 ]
}
"240
[; ;MCAL_Layer/usart/hal_usart.c: 240: static void EUSART_BaudRateInit(const eusart_cfg_t *_eusart)
[v _EUSART_BaudRateInit `(v ~T0 @X0 1 sf1`*CS278 ]
"241
[; ;MCAL_Layer/usart/hal_usart.c: 241: {
{
[e :U _EUSART_BaudRateInit ]
"240
[; ;MCAL_Layer/usart/hal_usart.c: 240: static void EUSART_BaudRateInit(const eusart_cfg_t *_eusart)
[v __eusart `*CS278 ~T0 @X0 1 r1 ]
"241
[; ;MCAL_Layer/usart/hal_usart.c: 241: {
[f ]
"242
[; ;MCAL_Layer/usart/hal_usart.c: 242:     float_t baudRateVal = 0;
[v _baudRateVal `f ~T0 @X0 1 a ]
[e = _baudRateVal -> -> 0 `i `f ]
"243
[; ;MCAL_Layer/usart/hal_usart.c: 243:     switch(_eusart->baudrate_cfg)
[e $U 327  ]
"244
[; ;MCAL_Layer/usart/hal_usart.c: 244:     {
{
"245
[; ;MCAL_Layer/usart/hal_usart.c: 245:         case BAUDRATE_ASYNC_8BIT_LOW_SPEED :
[e :U 328 ]
"246
[; ;MCAL_Layer/usart/hal_usart.c: 246:             TXSTA1bits.BRGH = 0;
[e = . . _TXSTA1bits 0 2 -> -> 0 `i `uc ]
"247
[; ;MCAL_Layer/usart/hal_usart.c: 247:             TXSTA1bits.SYNC = 0;
[e = . . _TXSTA1bits 0 4 -> -> 0 `i `uc ]
"248
[; ;MCAL_Layer/usart/hal_usart.c: 248:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"249
[; ;MCAL_Layer/usart/hal_usart.c: 249:             SPBRG1 = (uint8_t)((((8*((1000000UL)))/(float_t)_eusart->baudrate) / 64.0f) - 1.0f);
[e = _SPBRG1 -> - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .64.0 `f -> .1.0 `f `uc ]
"250
[; ;MCAL_Layer/usart/hal_usart.c: 250:             break;
[e $U 326  ]
"251
[; ;MCAL_Layer/usart/hal_usart.c: 251:         case BAUDRATE_ASYNC_8BIT_HIGH_SPEED :
[e :U 329 ]
"252
[; ;MCAL_Layer/usart/hal_usart.c: 252:             TXSTA1bits.BRGH = 1;
[e = . . _TXSTA1bits 0 2 -> -> 1 `i `uc ]
"253
[; ;MCAL_Layer/usart/hal_usart.c: 253:             TXSTA1bits.SYNC = 0;
[e = . . _TXSTA1bits 0 4 -> -> 0 `i `uc ]
"254
[; ;MCAL_Layer/usart/hal_usart.c: 254:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"255
[; ;MCAL_Layer/usart/hal_usart.c: 255:             SPBRG1 = (uint8_t)((((8*((1000000UL)))/(float_t)_eusart->baudrate) /16.0f) - 1.0f);
[e = _SPBRG1 -> - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .16.0 `f -> .1.0 `f `uc ]
"256
[; ;MCAL_Layer/usart/hal_usart.c: 256:             break;
[e $U 326  ]
"257
[; ;MCAL_Layer/usart/hal_usart.c: 257:         case BAUDRATE_ASYNC_16BIT_LOW_SPEED :
[e :U 330 ]
"258
[; ;MCAL_Layer/usart/hal_usart.c: 258:             TXSTA1bits.BRGH = 0;
[e = . . _TXSTA1bits 0 2 -> -> 0 `i `uc ]
"259
[; ;MCAL_Layer/usart/hal_usart.c: 259:             TXSTA1bits.SYNC = 0;
[e = . . _TXSTA1bits 0 4 -> -> 0 `i `uc ]
"260
[; ;MCAL_Layer/usart/hal_usart.c: 260:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"261
[; ;MCAL_Layer/usart/hal_usart.c: 261:             baudRateVal = (float_t)( (((8*((1000000UL)))/(float_t)_eusart->baudrate) / 16.0f) - 1.0f );
[e = _baudRateVal - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .16.0 `f -> .1.0 `f ]
"262
[; ;MCAL_Layer/usart/hal_usart.c: 262:             SPBRG1 = (uint8_t)baudRateVal;
[e = _SPBRG1 -> _baudRateVal `uc ]
"263
[; ;MCAL_Layer/usart/hal_usart.c: 263:             SPBRGH = (uint8_t)((uint32_t)baudRateVal >> 8);
[e = _SPBRGH -> >> -> _baudRateVal `ul -> 8 `i `uc ]
"264
[; ;MCAL_Layer/usart/hal_usart.c: 264:             break;
[e $U 326  ]
"265
[; ;MCAL_Layer/usart/hal_usart.c: 265:         case BAUDRATE_ASYNC_16BIT_HIGH_SPEED :
[e :U 331 ]
"266
[; ;MCAL_Layer/usart/hal_usart.c: 266:             TXSTA1bits.BRGH = 1;
[e = . . _TXSTA1bits 0 2 -> -> 1 `i `uc ]
"267
[; ;MCAL_Layer/usart/hal_usart.c: 267:             TXSTA1bits.SYNC = 0;
[e = . . _TXSTA1bits 0 4 -> -> 0 `i `uc ]
"268
[; ;MCAL_Layer/usart/hal_usart.c: 268:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"269
[; ;MCAL_Layer/usart/hal_usart.c: 269:             baudRateVal = (float_t)((((8*((1000000UL)))/(float_t)_eusart->baudrate) / 4.0f) - 1.0f);
[e = _baudRateVal - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .4.0 `f -> .1.0 `f ]
"270
[; ;MCAL_Layer/usart/hal_usart.c: 270:             SPBRG1 = (uint8_t)baudRateVal;
[e = _SPBRG1 -> _baudRateVal `uc ]
"271
[; ;MCAL_Layer/usart/hal_usart.c: 271:             SPBRGH = (uint8_t)((uint32_t)baudRateVal >> 8);
[e = _SPBRGH -> >> -> _baudRateVal `ul -> 8 `i `uc ]
"272
[; ;MCAL_Layer/usart/hal_usart.c: 272:             break;
[e $U 326  ]
"273
[; ;MCAL_Layer/usart/hal_usart.c: 273:         case BAUDRATE_SYNC_8BIT :
[e :U 332 ]
"274
[; ;MCAL_Layer/usart/hal_usart.c: 274:             TXSTA1bits.SYNC = 1;
[e = . . _TXSTA1bits 0 4 -> -> 1 `i `uc ]
"275
[; ;MCAL_Layer/usart/hal_usart.c: 275:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"276
[; ;MCAL_Layer/usart/hal_usart.c: 276:             SPBRG1 = (uint8_t)((((8*((1000000UL)))/(float_t)_eusart->baudrate) / 4.0f) - 1.0f);
[e = _SPBRG1 -> - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .4.0 `f -> .1.0 `f `uc ]
"277
[; ;MCAL_Layer/usart/hal_usart.c: 277:             break;
[e $U 326  ]
"278
[; ;MCAL_Layer/usart/hal_usart.c: 278:         case BAUDRATE_SYNC_16BIT:
[e :U 333 ]
"279
[; ;MCAL_Layer/usart/hal_usart.c: 279:             TXSTA1bits.SYNC = 1;
[e = . . _TXSTA1bits 0 4 -> -> 1 `i `uc ]
"280
[; ;MCAL_Layer/usart/hal_usart.c: 280:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"281
[; ;MCAL_Layer/usart/hal_usart.c: 281:             baudRateVal = (float_t)((((8*((1000000UL)))/(float_t)_eusart->baudrate) / 4.0f) - 1.0f);
[e = _baudRateVal - / / -> * -> -> -> 8 `i `l `ul -> 1000000 `ul `f -> . *U __eusart 0 `f -> .4.0 `f -> .1.0 `f ]
"282
[; ;MCAL_Layer/usart/hal_usart.c: 282:             SPBRG1 = (uint8_t)baudRateVal;
[e = _SPBRG1 -> _baudRateVal `uc ]
"283
[; ;MCAL_Layer/usart/hal_usart.c: 283:             SPBRGH = (uint8_t)((uint32_t)baudRateVal >> 8);
[e = _SPBRGH -> >> -> _baudRateVal `ul -> 8 `i `uc ]
"284
[; ;MCAL_Layer/usart/hal_usart.c: 284:             break;
[e $U 326  ]
"286
[; ;MCAL_Layer/usart/hal_usart.c: 286:         default:
[e :U 334 ]
"287
[; ;MCAL_Layer/usart/hal_usart.c: 287:             break;
[e $U 326  ]
"288
[; ;MCAL_Layer/usart/hal_usart.c: 288:     }
}
[e $U 326  ]
[e :U 327 ]
[e [\ -> . *U __eusart 1 `ui , $ -> . `E3449 0 `ui 328
 , $ -> . `E3449 1 `ui 329
 , $ -> . `E3449 2 `ui 330
 , $ -> . `E3449 3 `ui 331
 , $ -> . `E3449 4 `ui 332
 , $ -> . `E3449 5 `ui 333
 334 ]
[e :U 326 ]
"289
[; ;MCAL_Layer/usart/hal_usart.c: 289:     return;
[e $UE 325  ]
"290
[; ;MCAL_Layer/usart/hal_usart.c: 290: }
[e :UE 325 ]
}
"295
[; ;MCAL_Layer/usart/hal_usart.c: 295: void EUSART_TX_interruptHandler(void)
[v _EUSART_TX_interruptHandler `(v ~T0 @X0 1 ef ]
"296
[; ;MCAL_Layer/usart/hal_usart.c: 296: {
{
[e :U _EUSART_TX_interruptHandler ]
[f ]
"297
[; ;MCAL_Layer/usart/hal_usart.c: 297:     if(G_EUSART_Tx_CBF != ((void*)0))
[e $ ! != _G_EUSART_Tx_CBF -> -> -> 0 `i `*v `*F3549 336  ]
"298
[; ;MCAL_Layer/usart/hal_usart.c: 298:     {
{
"299
[; ;MCAL_Layer/usart/hal_usart.c: 299:         (PIE1bits.TXIE = 0);
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"300
[; ;MCAL_Layer/usart/hal_usart.c: 300:         G_EUSART_Tx_CBF();
[e ( *U _G_EUSART_Tx_CBF ..  ]
"302
[; ;MCAL_Layer/usart/hal_usart.c: 302:     }
}
[e $U 337  ]
"303
[; ;MCAL_Layer/usart/hal_usart.c: 303:     else
[e :U 336 ]
"304
[; ;MCAL_Layer/usart/hal_usart.c: 304:     {
{
"306
[; ;MCAL_Layer/usart/hal_usart.c: 306:     }
}
[e :U 337 ]
"307
[; ;MCAL_Layer/usart/hal_usart.c: 307: }
[e :UE 335 ]
}
"309
[; ;MCAL_Layer/usart/hal_usart.c: 309: void EUSART_RX_interruptHandler(void)
[v _EUSART_RX_interruptHandler `(v ~T0 @X0 1 ef ]
"310
[; ;MCAL_Layer/usart/hal_usart.c: 310: {
{
[e :U _EUSART_RX_interruptHandler ]
[f ]
"311
[; ;MCAL_Layer/usart/hal_usart.c: 311:     if(G_EUSART_FrameError_CBF && RCSTAbits.FERR == 1)
[e $ ! && != _G_EUSART_FrameError_CBF -> -> 0 `i `*F3551 == -> . . _RCSTAbits 0 2 `i -> 1 `i 339  ]
"312
[; ;MCAL_Layer/usart/hal_usart.c: 312:     {
{
"313
[; ;MCAL_Layer/usart/hal_usart.c: 313:         uint8_t dummyRead;
[v _dummyRead `uc ~T0 @X0 1 a ]
"315
[; ;MCAL_Layer/usart/hal_usart.c: 315:         EUSART_ReadByte_polling(&dummyRead);
[e ( _EUSART_ReadByte_polling (1 &U _dummyRead ]
"316
[; ;MCAL_Layer/usart/hal_usart.c: 316:         G_EUSART_FrameError_CBF();
[e ( *U _G_EUSART_FrameError_CBF ..  ]
"317
[; ;MCAL_Layer/usart/hal_usart.c: 317:     }
}
[e $U 340  ]
"318
[; ;MCAL_Layer/usart/hal_usart.c: 318:     else if(G_EUSART_Rx_CBF)
[e :U 339 ]
[e $ ! != _G_EUSART_Rx_CBF -> -> 0 `i `*F3553 341  ]
"319
[; ;MCAL_Layer/usart/hal_usart.c: 319:     {
{
"320
[; ;MCAL_Layer/usart/hal_usart.c: 320:         G_EUSART_Rx_CBF();
[e ( *U _G_EUSART_Rx_CBF ..  ]
"321
[; ;MCAL_Layer/usart/hal_usart.c: 321:     }
}
[e $U 342  ]
"322
[; ;MCAL_Layer/usart/hal_usart.c: 322:     else
[e :U 341 ]
"323
[; ;MCAL_Layer/usart/hal_usart.c: 323:     {
{
"325
[; ;MCAL_Layer/usart/hal_usart.c: 325:     }
}
[e :U 342 ]
[e :U 340 ]
"326
[; ;MCAL_Layer/usart/hal_usart.c: 326:    if(G_EUSART_OverRunError_CBF)
[e $ ! != _G_EUSART_OverRunError_CBF -> -> 0 `i `*F3554 343  ]
"327
[; ;MCAL_Layer/usart/hal_usart.c: 327:     {
{
"328
[; ;MCAL_Layer/usart/hal_usart.c: 328:         G_EUSART_OverRunError_CBF();
[e ( *U _G_EUSART_OverRunError_CBF ..  ]
"329
[; ;MCAL_Layer/usart/hal_usart.c: 329:         RCSTAbits.CREN = 0;
[e = . . _RCSTAbits 0 4 -> -> 0 `i `uc ]
"330
[; ;MCAL_Layer/usart/hal_usart.c: 330:         RCSTAbits.CREN = 1;
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"331
[; ;MCAL_Layer/usart/hal_usart.c: 331:     }
}
[e $U 344  ]
"332
[; ;MCAL_Layer/usart/hal_usart.c: 332:     else
[e :U 343 ]
"333
[; ;MCAL_Layer/usart/hal_usart.c: 333:     {
{
"335
[; ;MCAL_Layer/usart/hal_usart.c: 335:     }
}
[e :U 344 ]
"336
[; ;MCAL_Layer/usart/hal_usart.c: 336: }
[e :UE 338 ]
}
